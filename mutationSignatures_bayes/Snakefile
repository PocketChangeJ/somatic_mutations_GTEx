# IMPORTAN, to re-run all rm the following files
# config["tempDir"]/individualSignaturesDone.txt
# config["tempDir"]/consensusSignaturesDone.txt
# 
# ml viz graphviz
# snakemake --dag  | dot -Tsvg > dag.svg
# snakemake --dag  | dot -Tpng > dag.png

import os
from time import gmtime, strftime

#resource.setrlimit(resource.RLIMIT_AS, (7000 * 1048576, -1))


##--------------------------------------------------##
## GLOBAL

configfile: "../config.json"
localrules: download_cancerSignatures, create_consensusSignatures, create_mutationMatrix, all, all_individualSignatures, all_consensusSignatures, all_tSNE, all_reverse_signature_finding

# Sample ids
TISSUES, MAF, SAMPLES, = glob_wildcards(os.path.join(config["projectDir"], config["mutationCountDir"]["context"], '{tissue,\w+}', '{maf, .+}', '{sample,\w+}.txt'))
TISSUES = set(TISSUES)
TISSUES.remove("Whole_Blood_EXO")
TISSUES = list(TISSUES)
MAF = set(MAF)

#TISSUES = list(TISSUES)[0:3]
#
#TISSUES = "Skin_Sun_Exposed_Lower_leg"
MAF = "n6_0.0_0.7"

##--------------------------------------------------##


##--------------------------------------------------##
## PIPELINE

rule all:
    input: 
        expand(os.path.join(config["projectDir"], "mutationSignatures_SignatureAnalyzer", "SignatureAnalyzer_results", "{tissue}", "L1KL.lego96.{tissue}.10.signature.freq.pdf"), tissue = TISSUES)


rule create_maf:
    input:
        os.path.join(os.path.join(config["projectDir"], config["mutationCountDir"]["map"], "{tissue}", MAF))
    output:
        os.path.join(os.path.join(config["projectDir"], "mutationSignatures_SignatureAnalyzer", "maf_tables", "{tissue}.txt"))
    shell:
        '''
        ml R/3.4.0
        cd R
        Rscript create_maf_from_dir.R {input}/ {output}
        '''

rule run_signature_analyzer:
    input:
        os.path.join(os.path.join(config["projectDir"], "mutationSignatures_SignatureAnalyzer", "maf_tables", "{tissue}.txt"))
    params:
        tissue = "{tissue}",
        outdir = os.path.join(config["projectDir"], "mutationSignatures_SignatureAnalyzer", "SignatureAnalyzer_results", "{tissue}")
    output:
        os.path.join(config["projectDir"], "mutationSignatures_SignatureAnalyzer", "SignatureAnalyzer_results", "{tissue}", "L1KL.lego96.{tissue}.10.signature.freq.pdf")
    shell:
        '''
        ml R/3.4.0
        cd R/SignatureAnalyzer.0421-2017.Broad_Institute
        Rscript SignatureAnalyzer.Broad.R {params.tissue} {input} {params.outdir}/
        '''



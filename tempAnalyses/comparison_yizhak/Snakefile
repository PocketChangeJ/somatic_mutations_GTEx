# Run line

import os, sys

##--------------------------------------------------##
## GLOBAL

configfile: "../../config.json"

MAF = 'n6_0.0_0.7'


##--------------------------------------------------##


##--------------------------------------------------##
## PIPELINE

rule all:
    input: 
        # Get filters per mut
        os.path.join(config["projectDir"], "comparison_yizhak", "filter_counts", "number_yizhakMuts_with_filter.pdf"),
        os.path.join(config["projectDir"], "comparison_yizhak", "filter_counts", "filter_counts_per_mut.txt"),
        # Venn Diagrams
        #os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_overlap_all_mutations.pdf"),
        #os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_overlap_unique_mutations.pdf"),
        #os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_perTissue_percent_overlap_unique.pdf"),
        #os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_perTissue_percent_overlap_all.pdf")
        #
        #Overlaping my filters with yizahk mutations
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all_filters_yizhakOverlap.bed"),
        #Compiling my all data with filters
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all_filters.bed")
        # Overlap of mutations file
        #os.path.join(config["projectDir"], "comparison_yizhak", "tables", "overlap_mutations.txt")
    

rule make_bed_mutations:
    input:
        os.path.join(config["projectDir"], "supp_info", "tables", "Table_mutations_all.tsv.gzip")
    output:
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all.bed")
    shell:
        '''
        zcat {input} | tail -n +2 | awk -v OFS="\\t" '{{$2 = $2 "\\t" $2 + 1; print $0}}' > {output}
        '''
        
rule make_bed_mutations_yizhak:
    input:
        os.path.join(config["auxiliaryFiles"]["dir"], "mutations_yizhak_science_aaw0726-Table-S3.tsv")
    output:
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_yizhak.bed")
    shell:
        '''
        tail -n +2 {input} | awk -v FS="\\t" -v OFS="\\t" '{{$2 = "chr" $2; $4 = $4 + 1; print $0}}' > {output}.temp
        paste <(awk -v FS="\\t" -v OFS="\\t" '{{for (i=1; i<=NF-1; i++) $i = $(i+1); NF-=1; print}}' {output}.temp)  <(cut -f 1 {output}.temp) > {output}
        rm {output}.temp
        '''

rule create_venn_diagrams:
    input:
        mine = os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all.bed"),
        yizhak = os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_yizhak.bed")
    params:
        mine_alt_col = "5",
        yizhak_alt_col = "7",
        mine_tissue_col = "9",
        yizhak_tissue_col = "17",
        out_prefix =  os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_")
    output:
        os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_overlap_all_mutations.pdf"),
        os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_overlap_unique_mutations.pdf"),
        os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_perTissue_percent_overlap_unique.pdf"),
        os.path.join(config["projectDir"], "comparison_yizhak", "venn_diagrams", "1_perTissue_percent_overlap_all.pdf")
    shell:
        '''
        ml R/3.4.0
        cd R
        Rscript mutation_overlap.R {input} {params}
        '''
 
rule create_all_filtered:
    input:
        os.path.join(config["projectDir"], config["mutationCountDir"]["root"], "filtered")
    params:
        maf = MAF
    output:
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all_filters.bed")
    shell:
        '''
        for tissue in {input}/*
        do
            tissue_name=$(basename $tissue)
            cat $tissue/{params.maf}/*txt > {output}.tissue_${{tissue_name}}
            awk -v FS="\\t" -v OFS="\\t" -v tissue=${{tissue_name}} '{{$2 = $2 "\\t" $2 + 1; print $0 "\\t" tissue}}' {output}.tissue_${{tissue_name}} > {output}.tissue_${{tissue_name}}.temp
            mv {output}.tissue_${{tissue_name}}.temp {output}.tissue_${{tissue_name}}
        done
        
        cat {output}.tissue_* | grep -v EXO > {output}.temp
        rm {output}.tissue_*
        sort -k1,1 -k2,2n {output}.temp > {output}
        '''
        
rule ovelap_filter_yizhak:
    input:
        yizhak=os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_yizhak.bed"),
        mine=os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all_filters.bed")
    output:
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all_filters_yizhakOverlap.bed")
    shell:
        '''
        bedtools intersect -sorted -wao -f 1 -a {input.yizhak} -b {input.mine} > {output}
        '''

rule plot_filter_counts:
    input:
        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all_filters_yizhakOverlap.bed")
    params:
        out_prefix=os.path.join(config["projectDir"], "comparison_yizhak", "filter_counts")
    output:
        os.path.join(config["projectDir"], "comparison_yizhak", "filter_counts", "number_yizhakMuts_with_filter.pdf"),
        os.path.join(config["projectDir"], "comparison_yizhak", "filter_counts", "filter_counts_per_mut.txt")
    shell:
        '''
        ml R/3.4.0
        cd R
        Rscript get_filters_on_yizhak.R {input} {params}/
        '''
        
        
#rule Table_percentage_removal_per_tissue:
#    input:
#        mine = os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_all.bed"),
#        yizhak = os.path.join(config["projectDir"], "comparison_yizhak", "tables", "table_mutations_yizhak.bed")
#    output:
#        os.path.join(config["projectDir"], "comparison_yizhak", "tables", "overlap_mutations.txt")
#    shell:
#        '''
#        bedtools intersect -wao -f 1 -a {input.mine} -b {input.yizhak} > {output}
#        '''
